[**
 * The documentation of the module modelJsonldFile.
 */]
[module dataTypeJsonld('http://www.eclipse.org/uml2/5.0.0/Types', 'http://www.eclipse.org/uml2/5.0.0/UML', 'http://www.eclipse.org/uml2/5.0.0/UML/Profile/Standard')/]

[import ucmis::m2t::query::modelQuery/]
[import ucmis::m2t::service::utilityServices/]
[import ucmis::m2t::target::jsonld::commonJsonld/]
[import ucmis::m2t::target::rdf::commonRdf/]

[comment encoding = UTF-8 /]
[**
 * Generate the core of a type-scoped context for this datatype.
*/]
[template public dataTypeJsonldCore(aDataType : uml::DataType, modular : Boolean)]
  [aDataType.genAttributes(modular)/]
  " comment ": "tag:json-should-support-trailing-commas"[/template]

[**
 * Generates a complete self-contained type-scoped context for this datatype,
 * as a sequence of contexts to be included in a JSON array.
*/]
[template public dataTypeJsonldSelfContained(aDataType : uml::DataType)]
  [if (aDataType.general->notEmpty() and aDataType.general->asSequence()->first().isNotInMappedItems())]
    [aDataType.general->asSequence()->collect(temp1 | temp1.oclAsType(uml::DataType))->collect(temp2 | temp2.dataTypeJsonldSelfContained())/],
  [/if]
  {
    [aDataType.dataTypeJsonldCore(false)/] 
  }[/template]

[**
*/]
[template public dataTypeJsonldFile(aDataType : uml::DataType) post(self.trim())]
  [file (aDataType.getModel().e_modelShortName() + '/encoding/json-ld/' + aDataType.name + '.jsonld', overwrite, 'UTF-8')]
    [aDataType.dataTypeJsonldModular()/]
  [/file]
[/template]

[**
 * Generates a modular standalone context for this datatype.
 * Mostly used for the HTML documentation.
*/]
[template public dataTypeJsonldModular(aDataType : uml::DataType) post(self.trim())]
  {
    "@context": ['['/]
  [if (aDataType.general->notEmpty() and aDataType.general->asSequence()->first().isNotInMappedItems())]
        "[aDataType.general->asSequence()->collect(temp3 | temp3.name)/].jsonld",
  [/if]
      {
        "cdi": "[aDataType.getProperty('DDI-CDI_RDF_NS')/]",
        "xsd": "http://www.w3.org/2001/XMLSchema#",
  
        [aDataType.dataTypeJsonldCore(true)/] 
      }
    ],
    "generatedBy": "[aDataType.generationMessageJsonld()/]",
    "basedOn": "based on the UML data type [aDataType.qualifiedName/]"
  }[/template]