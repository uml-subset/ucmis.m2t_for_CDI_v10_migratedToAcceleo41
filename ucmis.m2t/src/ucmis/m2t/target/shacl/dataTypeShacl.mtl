[module dataTypeShacl('http://www.eclipse.org/uml2/5.0.0/Types', 'http://www.eclipse.org/uml2/5.0.0/UML', 'http://www.eclipse.org/uml2/5.0.0/UML/Profile/Standard')/]

[import ucmis::m2t::query::modelQuery/]
[import ucmis::m2t::target::shacl::commonShacl/]
[import ucmis::m2t::target::rdf::commonRdf/]
[import ucmis::m2t::query::propertiesQuery/]

[comment encoding = UTF-8 /]
[template public dataTypeShacl(aDataType : uml::DataType)]
  # datatype [aDataType.name/]
  # based on the UML data type [aDataType.qualifiedName/]
  [aDataType.fragment()/] a sh:NodeShape;
  [if (aDataType.oclIsTypeOf(uml::Enumeration))]
        sh:in ( [for (aLiteral : uml::EnumerationLiteral | aDataType.oclAsType(uml::Enumeration).ownedLiteral)][aLiteral.iri()/] [/for] );
  [else]
        sh:targetClass [aDataType.iri()/];
    	sh:message "See [aDataType.getProperty('DDI-CDI_RDF_NS')/][aDataType.name/]";
    	sh:closed true;
    	sh:ignoredProperties ( owl:sameAs );
        sh:property ['['/]
    			sh:path rdf:type;
    			sh:in ( [aDataType.allSubDataTypes()/] ) ;
        ];
  [/if]
  [aDataType.datatypePropertiesShacl()/]
  .
  
  [for (anAttribute : uml::Property | aDataType.e_attributes())]
    [anAttribute.attributeShape()/]
  [/for]
[/template]

[template public datatypePropertiesShacl(aDataType : uml::DataType)]
      # attributes
  [for (anAttribute : uml::Property | aDataType.e_attributes())]
        sh:property [anAttribute.fragment()/];
  [/for]
  
  [for (sd : uml::DataType | aDataType.general->asSequence()->collect(temp1 | temp1.oclAsType(uml::DataType)))]
        # ---- superclass: [sd.name/]
    [sd.datatypePropertiesShacl()/]
  [/for]
  
[/template]