[**
 * All templates in the *Shacl.mtl modules generate a SHACL shape graph.
 */]
[module modelShaclFile('http://www.eclipse.org/uml2/5.0.0/Types', 'http://www.eclipse.org/uml2/5.0.0/UML', 'http://www.eclipse.org/uml2/5.0.0/UML/Profile/Standard')/]

[import ucmis::m2t::query::modelQuery/]
[import ucmis::m2t::service::utilityServices/]
[import ucmis::m2t::target::shacl::classShacl/]
[import ucmis::m2t::target::shacl::dataTypeShacl/]
[import ucmis::m2t::target::rdf::commonRdf/]
[import ucmis::m2t::target::shacl::commonShacl/]
[import ucmis::m2t::query::propertiesQuery/]

[comment encoding = UTF-8 /]
[**
 * Processes an UML class model according to the the rules described in the
 * document "UML Class Interoperable Subset".
 * See {@https://ddi-alliance.bitbucket.io/DDI-CDI/DDI-CDI_Public_Review_1/} ??.
 * Creates a file for the model.
 * @param aModel a model
*/]
[template public packageShaclFile(aModel : uml::Model)]
  [file (aModel.e_modelShortName() + '/encoding/shacl/' + aModel.e_modelAcronym().toLower() + '.shacl.ttl', overwrite, 'UTF-8')]
    [aModel.getModel().ttl_prefixes()/]
    PREFIX sh: <http://www.w3.org/ns/shacl#>
    
    [for (aClass : uml::Class | aModel.eAllContents(uml::Class)->sortedBy(temp1 | temp1.name)->select(temp2 | temp2.qualifiedName.contains('DDICDILibrary')))]
      [aClass.classShacl()/]
    [/for]
    [for (aDataType : uml::DataType | aModel.eAllContents(uml::DataType)->sortedBy(temp3 | temp3.name)->select(temp4 | temp4.qualifiedName.contains('DDICDILibrary'))->select(temp5 | not temp5.qualifiedName.contains('XMLSchemaDataTypes')))]
      [aDataType.dataTypeShacl()/]
    [/for]
  [/file]
[/template]